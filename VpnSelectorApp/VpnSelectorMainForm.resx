<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="vpnNotifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="notificationTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>525, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAASCwAAEgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAADMAAAAzAAAAMwAAADMAAAAzAAAAIgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ+LdACfi3QAmoZvAINyXp+ahW3/oYRn/1SJpP8qj8j/MZHH/y2I
        urkAAAAzAAAAMwAAADMAAAAzAAAAMwAAACMAAAAjAAAAMwAAADOlknz/uaKE/9O9oP8lmtz/RrXs/2nS
        /v9fw+//LpjU/6qBXP+lg2T/ooRm/5+EaP+PemPAkH5pwJuHcP+ZhG3/l4Js/5aBa/+ZgGf/on9f/yOT
        1P9ew/L/guH//1/F8f8hiMT/Io3L/yOR0P95rsb/pYVm/56Kc//NuJv/8/nx//D38f/u9vH/7vXw//P1
        7v/+9un/HpLY/1rD8v9u2P7/U8H0/1fH+f9UxPn/NaHc/2WQo/+einb/0cOt/+SQIf/rmCD/9KQi//2w
        I///syP//akf//+fFP8ah8v/as/6/27S+/9x1f3/cdf//27U/f80m9T/oIx4/9bPvv/jlC//6KE3/++l
        L//2rSz/964s//WnKf/7nRz/HIzT/4Hh//+C4f//L3Oz/zB0tP+H5v//OJ3U/6KOef/e2sv/344r/+ah
        QP/urk7/8bFN//G2Vf/ytlv/+7VX/xuQ2P9x2f//ed7//zp7tv87fLj/eN7//zih2/+jj3r/5eXY/9iE
        JP/glzn/5qRF/+qrT//ssFn/7bJh//S0Zf99oaf/Oqrj/2jV/f9v2///atf//0Sz6v9tmaz/pZF8/+zv
        4//QdRb/2YYp/96SNf/jmj7/5aBI/+WjUv/oplr/8Kdc/3+61v8pm9r/LZ3b/yue3f+IwNv/rYxu/6mU
        f//z9+r/8Pbs/+/27v/v9u7/7vXt/+707P/u9Ov/7vPp//L05v/38eD/r45z//7izP/738n/9+nc/6SM
        df+tmYSwq5aB/6qVgP+plYD/qZWA/6mUgP+plID/p5J9/6WPef+kjnj/po95/7Ochf+6oYj/uJ6E//Pt
        4/+jjnb/r5uGAK6ahQCumoUArpqFAK6ahQCumoUArZmEAKWPeP/38uv/7tzM/+7czf/u3c3/7dzM/+za
        yv/08Oj/pY94/6+bhgCvm4YAr5uGAK+bhgCvm4YAr5uGAKqWgQCmkHr/+PTt/9rLt//ay7j/2su4/9rL
        t//ayrf/+PPs/6WQev+vm4YAr5uGAK+bhgCvm4YAr5uGAK6ahQCtmYQAqZR+//779f/79vL/+/by//v2
        8v/79vL/+/by//779f+plH7/r5uGAK+bhgCvm4YAr5uGAK+bhgCvm4YAr5uGAK2Zg7CqlX//qZN9/6iT
        ff+ok33/qJN9/6mTff+qlX//rZmDsOA/AADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP4AAAD+AAAA/gAAAP4AAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAASCwAAEgsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAABEAAAAWAAAAFgAAABYAAAARAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAA0AAAAUAAAAFgAA
        ABYAAAAWAAAAFAAAAA0AAAAUAAAAMgAAAEMAAABDAAAAQwAAADcAAAAcAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAkAAAAbAAAAMQAA
        AD8AAABDAAAAQwAAAEMAAAA/AAAALwAAAC0jdb7/LHO1/y9zs/8wc7T/MHe2/wAAADcAAAARAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAIxoW
        E0iCcF3ElYBp/5R+aP+Tfmj/lH5o/5V/af+Cb1vBAAAASyFzvf9Mx/7/TcP4/03E+P84h8X/M3i2/wAA
        ACcAAAAWAAAAFgAAABYAAAAWAAAAFgAAABUAAAANAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABJkV0hznYpy/8W3pf/n4tb/9PDk//Pw5P/08OT/5+LW/8e5p/+jiWz6S3ee9jKP0/9Kwfj/S770/03D
        +P8zdrX/AAAASAAAAEMAAABDAAAAQwAAAEMAAABDAAAAPwAAACsAAAANAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFp+KdP/Yz73/3tXB/9PGrv/Owaf/zsCn/87Bp//Txq7/39XB/97Rv/+niGr/UXWX/zOP
        z/9QxPn/UsX4/y9ysP8yd7b/Lnu//6iFYf+cg2f/mIFp/5eBaf+Xgmr/iXdixAAAABUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAASoo54/8m6ov/Ar5T/vqyR/72rkP+9q5D/vauQ/76skf/Ar5T/ybmg/6OL
        cv/cyKv/Zo+x/zaPz/9by/z/XMr6/13N/f8vc7X/J3a9/+TLqv/eyqz/3Mmt/9zMs/+dhGj/AAAAFgAA
        AAAAAAAEAAAADQAAABUAAAAWAAAAFgAAAB6nk37/sp6B/7Cbfv/az7b/5NzL/+Tbyv/k3Mv/2s+2/7Cb
        fv+xnID/ppJ7/9PErv/axKn/Z46x/zuT0f9l0f3/Zc77/2bR/f9SsOT/K3O3/yh0uf8/gLn/h6O4/6mE
        Yf8AAAAcAAAAAwAAAA0AAAArAAAAPwAAAEMAAABDAAAARExDOmuolYD4qZJ3/8/Cqv+8qYj/vKmI/7yp
        iP/Pwqr/qZJ3/66ahP/GuKX/0sey/9THr//dya3/bJS1/0OX0v9x1f3/X8b4/0iy9P9Mt/f/TLj5/z+p
        8f81is7/TH+r/wAAAC0AAAALAAAAFYl3YsSXg2z/lYFr/5WBav+UgGr/lIBp/5N/af+Sfmf/mYZx/5F8
        Zv+RfWb/kXxm/5mGcf+Sfmf/kn5o/5F9Zv+RfGX/kXxk/5V9Y/+hf13/KXS5/2vR/v9Yvfb/ddX7/3nY
        /P962fz/d9j+/1zF/f89j83/MWmZngAAABQAAAAWl4Nu/9G6nf/Hr4//xq2O/8Wtjv/FrY7/xK2O/8Ss
        jf/ErI3/xKyN/8Ssjf/ErI3/xKyN/8Ssjf/ErI3/xKyN/8Ssjf/FrY3/yK6N/9i1jv8nc7r/YMn+/4Hc
        /v9/2/3/f9v+/3/d//+B3v//hOH//1q/9v88gLn/AAAAFgAAABaYhG3/0r2h/9nRvf/s7Of/6+zp/+rs
        6f/q6+n/6erp/+nq6f/o6un/6Onp/+jq6f/p6un/6erp/+nr6f/q7On/6+zp/+zs5//b0rz/2LiT/yx6
        vv9t1P//fNr9/3va/f9rx/H/QZHK/0KSzP9vzPT/cNj//zx+uP8AAAAWAAAAFpmEbv/Wwqj/0su4/+GO
        JP/jkR7/6Zgi/+2dIv/zpCL/96oi//ywI///syP//bEj//irIv/0pSL/7qAi/+qZIv/mkyD/4YkZ/9PM
        uP/bvpv/Knq//3La//932Pz/d9n9/z+Qyv///+n/6Mai/0OVzv923///PX+6/wAAABQAAAAWmYVw/9rI
        sv/MxLP/45Ux/+eeOv/onS//7KEu//GoL//1rS//+rMw//64MP/7tTD/9q8v//KpL//upC//6Z4v/+WY
        LP/hjyP/zsW0/9/DpP82d7H/a9H6/3LY/P9y2f3/QZLM/7qyqf+7s6v/RJjP/3LX/P8/grv/AAAACwAA
        ABach3D/38+5/8e+rP/ilTL/5aBB/+qmRP/spTf/8KYw//OsMf/3sDH/+rIz//exM//0rTL/8agy/+yj
        Mv/onjL/5Jgv/+GPJf/Iv63/4Mqv/2Z+kv9Cl9L/btr//27Y/f9ixvD/QpXN/0SW0P9kzPb/TJ7T/zh3
        q48AAAADAAAAFpyIcv/k1cH/wbek/+GRMP/jnj3/6KZF/+6sTf/vrEX/8akz//OqL//0rDD/86ww//Gp
        Mf/upTH/66Ex/+ecMP/ili7/4I0k/8G3pf/i0Ln/pIZo/02Ivv8/ldD/Ycz3/2rZ//9r2///Y9D6/0Wb
        0/9NgrD/AAAAFgAAAAAAAAAWnYlz/+jcyf+8sZ3/344u/+GZPP/moUL/6qhJ/+2vT//wtFX/8bVT//Gv
        RP/wqzv/7KIs/+ugLf/nmyz/45cr/9+RKf/fiSH/vLCc/+TWwf+ehWz/5s+0/4iit/9Eg7r/MHq7/zB6
        u/9EhLn/k7HK/6uLa/8AAAAWAAAAAAAAABafi3X/7eLQ/7eplf/cjCz/35c6/+OdQP/no0X/6qlL/+yt
        Uf/uslf/77Vd/++4Yv/wuWj/77pu/+u2av/rtm7/67l4/+q1c/+2p5L/6dzJ/6GHcv/pz73/6864/+vQ
        sv/v1a3/7tSs/+TOrf/z6Nj/oYpx/wAAABYAAAAAAAAAFqCLdf/y6dj/saOO/9qGKf/ckjj/4Jk//+Of
        Q//mpEj/6KhN/+qsUv/rr1f/67Fd/+uyYv/rtGb/6rRs/+m1cf/os3P/6a9v/7CgiP/w4tH/qol2/wCO
        Qv8AjD3/8NK2/wAZ5/8AGOX/4c6t/+/n2v+finP/AAAAFgAAAAAAAAAWoYx3//ju3/+snIb/1oIn/9iO
        Nf/clD3/4JpB/+KfRv/ko0v/5qZQ/+eqVf/orFr/6K1f/+euY//nr2j/5rBt/+avcf/mrW7/q5iA//To
        2f+qiHj/AMhW/wDGUv/s0Lb/eWb//3Zl///eza7/8Oje/5+Jc/8AAAAWAAAAAAAAABajjnf/+/Tn/6eW
        fv/TfSb/1ocy/9mPOf/dlD7/35lF/+KdSP/joU3/5KRT/+WmWP/lqF3/5ali/+SsZv/kq2v/5K1w/+Ws
        bv+mknj/+O7g/6SKdv/pz8L/583A/+HOuv/g0bT/39Cz/9nKsv/w6+D/oIp0/wAAABYAAAAAAAAAFqSO
        ef//+u7/oo1z/9N5IP/Ufyn/14Yw/9yNNf/dkTv/4ZdB/+KaRv/jnUz/5KFR/+SjVv/kpVv/5KZh/+Sn
        Zv/kqWz/5qlt/6GKb//89ef/oYt3/8arjP/Eqov/wqqK/8KqiP/BqIb/2Mq2//Ls5P+gi3T/AAAAFgAA
        AAAAAAAVppB6////9f+ZgGH/m4Zp/5uHbP+ahmz/moZr/5qFa/+ahWr/mYRq/5mEaf+ZhGn/mYNo/5mD
        aP+Zg2f/mYNn/5qDZv+agmT/mX9f///47P+ijXb/wqmI/8Cnhv+/pob/v6aF/76lg//Yyrb/9O/o/6GM
        df8AAAAWAAAAAAAAAA2ok33////3////9P////b////2////9v////b////2////9v////b////2////
        9v////b////2////9v////b////2////9f////T///7z/6KMdv///////fv6//z6+v/8+vr//fr6/9fI
        tf/28Or/oo12/wAAABYAAAAAAAAABKWRfbOnknz/z8Kt/83Bq//NwKv/zcCr/83Aq//NwKv/zcCr/83A
        q//NwKv/zcCr/83Aqv/MwKr/zMCq/83Aqv/NwKv/zcCr/87CrP+lkHv/u6mV/9zPvP/azLn/2cu4/9nL
        uP/Zy7j/2Mm2//f07P+jjnf/AAAAFgAAAAAAAAAAAAAABKmVgbCtmYP/rJeC/6yXgv+sl4L/rJeC/6yX
        gv+sl4L/rJeC/6yXgv+sl4L/q5aA/6iTff+ok33/qZR//6mUgP+qlYD/qpWB/7Oehv/Eq4z/wqmK/8Go
        if/BqIn/wKiI/7+mhf/azLn/+fXw/6SPeP8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABalj3r//vv2/97Pvf/Ap4X/waiG/8Gohv/BqIf/waeG/8Cn
        hv+/pob/v6aG/7+mhv+/poX/vqSD/9vLuf/79/L/pI95/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFqWQev/8+fb/2su3//z7+P/8+/j//Pr4//v6
        +P/7+vj/+/r4//v6+P/7+vj/+/r4//v6+P/7+vj/2sq2//v49P+lkHn/AAAAFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVppF7//z69//ayrb/2sm1/9rJ
        tf/aybX/2sm1/9rJtf/aybX/2sm1/9rJtf/aybX/2sm1/9rJtf/ayrb//Pr3/6aRe/8AAAAVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2plH3////9//36
        9//8+fX//Pn1//z59f/8+fX//Pn1//z59f/8+fX//Pn1//z59f/8+fX//Pn1//369/////3/qZR9/wAA
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKaS
        frOpk33/zsGr/8zAqf/Mv6n/zL+p/8y/qf/Mv6n/zL+p/8y/qf/Mv6n/zL+p/8y/qf/MwKn/zsGr/6mT
        ff+mkn6zAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABKmVgbCtmIP/rJeC/6yXgv+sl4L/rJeC/6yXgv+sl4L/rJeC/6yXgv+sl4L/rJeC/6yX
        gv+tmIP/qZWBsAAAAAQAAAAAAAAAAP/+A//+AAH/+AAB//gAAAH4AAAB+AAAAfgAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAGAAAAB//AAAf/wAAH/8AAB//AAAf/wAAH/+AAD
</value>
  </data>
</root>